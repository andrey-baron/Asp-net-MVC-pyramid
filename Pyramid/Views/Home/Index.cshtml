@model List<Pyramid.Entity.HomeEntity>
@{
    ViewBag.Title = "Пирамида строй";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@Styles.Render("~/Content/magnificPopupcss")
<div class="home-slider">

    <div class="row no-gutter">
        <div class="col-ten-md-6  col-xs-12">
            <ul class="home-slider__wrap">

                <li>
                    <div class="home-slider__item" style="background: url('/Content/img/Layer-slider.png')">
                        <p class="home-slider__item-title">
                            Отличные
                            цены
                            на сайдинг
                        </p>
                        <a href="" class="home-slider__item-btn">ознакомиться</a>
                    </div>
                </li>
                <li>
                    <div class="home-slider__item" style="background: url('/Content/img/Layer-slider.png')">
                        <p class="home-slider__item-title">
                            Отличные
                            цены
                            на сайдинг
                        </p>
                        <a href="" class="home-slider__item-btn">ознакомиться</a>
                    </div>
                </li>
            </ul>
        </div>
        <div class="col-ten-md-2 col-xs-6">
            <a href="@Url.Action("Index","Page",new {id= 3 })">
                <div class="home-slider__shipping-wrap">
                    <div class="home-slider__shipping">
                        <div class="home-slider__shipping-img"></div>
                        <p class="home-slider__head-title">Доставка</p>
                        <p class="home-slider__text">Доставка товаров до дверей <br>вашего дома</p>
                    </div>
                </div>
            </a>
        </div>
        <div class="col-ten-md-2  col-xs-6">
            <a href="@Url.Action("Index","Page",new {id= 8 })">
                <div class="home-slider__map"></div>
            </a>
        </div>
    </div>
</div>
<div class="season-offer">
    <div class="row no-gutter">

        @{ IEnumerable<Pyramid.Entity.Product>
                                              offers = (IEnumerable<Pyramid.Entity.Product>)ViewBag.SeasonOffers;}
        @if (offers.Count() > 0)
        {
            <div class="col-f-lg-3 col-md-3 col-xs-3 season-offer__item_green-title">
                <p class="season-offer__head-text">Сезонное предложение</p>
            </div>
            foreach (var item in offers)
            {
                <div class="col-f-lg-3 col-md-3 col-xs-3">
                    <div class="product__item">
                        <a href="@Url.Action("Index","Product",new { id=item.Id })">
                            <div class="product__link-block">
                                <img src="@(item.ThumbnailImg!=null?item.ThumbnailImg.ServerPathImg:"")" alt="" class="product__item-img">


                                <p class="product__item-title">
                                    @item.Title
                                </p>


                                <div class="product__item-price @Pyramid.Tools.ProductTool.GetClassByTypePrice((int)item.TypePrice)">
                                    <div class="triangle-up"></div>
                                    <div class="triangle-down"></div>
                                    <p class="product__item-price-inner"><span class="big-decimal">@item.Price</span> руб.</p>
                                </div>

                            </div>
                        </a>
                            <div class="product__item__hover_block_wrapper">
                                <div class="product__item__hover_block_wrapper__item product__in-stock @(item.TypeStatusProduct == Common.TypeStatusProduct.WillBeAdded?"product__in-stock_willbeadded":"")">
                                    @if (item.TypeStatusProduct == Common.TypeStatusProduct.Normal)
                                    {
                                    <p>в наличии</p>
                                    }
                                    @if (item.TypeStatusProduct == Common.TypeStatusProduct.WillBeAdded)
                                    {
                                    <p>Доступен для заказа</p>
                                    }
                                </div>
                                <a class="product__item__hover_block_wrapper__item" href="@Url.Action("CheckoutOneClick","Cart",new { id=item.Id})">
                                    <div class="product__buy product__buy_one-click">
                                        <p>Купить в один клик</p>
                                    </div>
                                </a>
                                <span class="product__item__hover_block_wrapper__item js-add-to-cart" data-ajaxid="@item.Id">
                                    <span class="product__buy product__buy_add-to-cart">
                                        Добавить в корзину
                                    </span>
                                </span>
                            </div>
</div>
                </div>

            }
        }





    </div>

</div>
@*<div class="call-to-action">
        <p class="call-to-action__head-title">Call to action</p>
    </div>*@
@{var feedback = new Common.FeedBack(); }
@foreach (var item in Model)
{
    <div class="decoration-work">
        <div class="row no-gutter">
            <div class="col-ten-lg-6 col-md-12 col-xs-12">
                <div class="decoration-work__scope-points" @(item.BannerWithPoints != null && item.BannerWithPoints.Images != null && item.BannerWithPoints.Images.ServerPathImg != null ? string.Format("style=background-image:url({0});background-color:#a9c95a;", item.BannerWithPoints.Images.ServerPathImg) : "")>
                    @if (item.BannerWithPoints != null && item.BannerWithPoints.PointOnImgs != null)
                    {
                        foreach (var point in item.BannerWithPoints.PointOnImgs)
                        {
                            if (point.Products != null)
                            {
                                <div class="decoration-work__point" style="top:@(point.CoordY)%; left:@(point.CoordX)%;">
                                    <div class="decoration-work__product">
                                        @*<div class="decoration-work__product-btn-close"></div>*@
                                        <a href="@Url.Action("Index","Product",new { id=point.Products.Id })"><img src="@(point.Products.ThumbnailImg!=null?point.Products.ThumbnailImg.ServerPathImg:Pyramid.Global.Config.PathNotFilledImage)" alt="" class="decoration-work__product-img"></a>
                                        <a href="@Url.Action("Index","Product",new { id=point.Products.Id })"><p class="decoration-work__product-title">@point.Products.Title</p></a>
                                        <div class="decoration-work__product-price product__item-price @Pyramid.Tools.ProductTool.GetClassByTypePrice((int)point.Products.TypePrice)">
                                            <p class="product__item-price-inner"><span class="big-decimal">@point.Products.Price</span> руб.</p>
                                        </div>
                                        <div class="decoration-work__product-add-to-cart product__buy product__buy_add-to-cart js-add-to-cart" data-ajaxid="@point.Products.Id">
                                            <p>Добавить в корзину</p>
                                        </div>
                                    </div>
                                </div>
                            }
                        }
                    }
                    <div class="decoration-work__description">
                        @MvcHtmlString.Create(item.Content)
                    </div>
                </div>
            </div>
            <div class="col-ten-lg-2 col-md-6  col-xs-6">
                <div class="decoration-work__answer-question">
                    @if (item.Faq != null)
                    {
                        <p class="decoration-work__question-head">ВОПРОС-ОТВЕТ</p>
                        int indxq = 0;
                        foreach (var itemQuestion in item.Faq.QuestionAnswer)
                        {
                            <p class="decoration-work__question-text">
                                <a href="@Url.Action("Get", "Faq" , new { id=item.Faq.Id })">
                                    @itemQuestion.Question
                                </a>
                            </p>

                            indxq++;
                            if (indxq > 1)
                            {
                                break;

                            }
                        }
                        <div class="decoration-work__question-wrap-all-link">
                            <a class="decoration-work__question-all-link"
                               href="@Url.Action("Get","Faq",new {id=item.Faq.Id })">
                                Смотреть
                                все вопросы
                            </a>
                        </div>
                    }
                </div>
            </div>
            <div class="col-ten-lg-2 col-md-6 col-xs-6">
                <div class="decoration-work__answer-question decoration-work__question-head_video-guide">
                    <p class="decoration-work__question-head">Видео-гид</p>
                    <div class="decoration-work__wrap-video">
                        <a href="@item.LinkYouTobe" class="decoration-work__popup-youtube">
                            <img class="decoration-work__video" src="@(item.Images!=null?item.Images.ServerPathImg:Pyramid.Global.Config.PathNotFilledImage)" alt="">
                            @if (item.Images != null && item.Images.ServerPathImg != null)
                            {
                                <div class="decoration-work__btn-play"></div>
                            }
                        </a>
                    </div>
                    <p class="decoration-work__description-video">@item.TitleVideoGuide</p>
                </div>
            </div>
        </div>
        <div class="grouping-products">
            <div class="row no-gutter">
                @if (item.Products != null)
                {
                    foreach (var itemProduct in item.Products)
                    {
                        <div class="col-f-lg-3 col-md-3 col-xs-3">
                            <div class="product__item">
                                <a href="@Url.Action("Index","Product",new { id=itemProduct.Id })">
                                    <div class="product__link-block">
                                        <img src="@(itemProduct.ThumbnailImg.ServerPathImg!=null?itemProduct.ThumbnailImg.ServerPathImg:Pyramid.Global.Config.PathNotFilledImage)" alt="@itemProduct.ThumbnailImg.ImgAlt" class="product__item-img">

                                        <p class="product__item-title">
                                            @itemProduct.Title
                                        </p>

                                        <div class="product__item-price @Pyramid.Tools.ProductTool.GetClassByTypePrice((int)itemProduct.TypePrice)">
                                            <div class="triangle-up"></div>
                                            <div class="triangle-down"></div>
                                            <p class="product__item-price-inner"><span class="big-decimal">@itemProduct.Price</span> руб.</p>
                                        </div>
                                    </div>
                                </a>
                                        <div class="product__item__hover_block_wrapper">
                                            <div class="product__item__hover_block_wrapper__item product__in-stock @(itemProduct.TypeStatusProduct == Common.TypeStatusProduct.WillBeAdded?"product__in-stock_willbeadded":"")">
                                                @if (itemProduct.TypeStatusProduct == Common.TypeStatusProduct.Normal)
                                                {
                                                    <p>в наличии</p>
                                                }
                                                @if (itemProduct.TypeStatusProduct == Common.TypeStatusProduct.WillBeAdded)
                                                {
                                                    <p>Доступен для заказа</p>
                                                }
                                            </div>


                                            <a class="product__item__hover_block_wrapper__item" href="@Url.Action("CheckoutOneClick","Cart",new { id=itemProduct.Id})">
                                                <div class="product__buy product__buy_one-click">
                                                    <p>Купить в один клик</p>
                                                </div>
                                            </a>
                                            <span class="product__item__hover_block_wrapper__item js-add-to-cart" data-ajaxid="@itemProduct.Id">
                                                <span class="product__buy product__buy_add-to-cart">
                                                    Добавить в корзину
                                                </span>
                                            </span>

                                        </div>
                                    </div>
                            </div>
                    }
                }
                @if (item.Categories != null && item.Categories.Count > 0)
                {
                    <div class="col-f-lg-3 col-md-3 col-xs-3">
                        <div class="decoration-work__categories">
                            @foreach (var category in item.Categories)
                            {
                                @Html.ActionLink(category.Title, "Index", "Category", new { id = category.Id }, new { @class = "decoration-work__category-link" })
                            }
                        </div>

                    </div>

                }

            </div>
        </div>
    </div>
    if (item.CallToAction != null)
    {
        <div class="call-to-action-wrap">
            <div class="call-to-action">
                <p class="call-to-action__head-title">@item.CallToAction</p>
            </div>
            <div class="call-to-action__form-wrap">
                <form action="#" class="feedback-form">

                    <div class="form-group call-to-action__form-group">
                        @Html.TextBoxFor(m => feedback.Name, new { @class = "form-control call-to-action__form-control", placeholder = Html.DisplayNameFor(d => feedback.Name) })
                        @Html.ValidationMessageFor(m => feedback.Name)

                    </div>
                    <div class="form-group call-to-action__form-group">
                        @Html.TextBoxFor(m => feedback.Email, new { @class = "form-control call-to-action__form-control", placeholder = Html.DisplayNameFor(d => feedback.Email) })
                        @Html.ValidationMessageFor(m => feedback.Email)
                        @*<input type="text" class="form-control call-to-action__form-control" placeholder="E-mail">*@
                    </div>
                    <div class="form-group call-to-action__form-group">
                        @Html.TextBoxFor(m => feedback.Phone, new { @class = "form-control call-to-action__form-control", placeholder = Html.DisplayNameFor(d => feedback.Phone) })
                        @Html.ValidationMessageFor(m => feedback.Phone)
                        @*<input type="text" class="form-control call-to-action__form-control" placeholder="Телефон">*@
                    </div>
                    <button class="call-to-action__btn">Отправить запрос</button>
                </form>
            </div>
        </div>

    }
}
<div class="rules-order">
    <p class="rules-order__head-title">ОСНОВНЫЕ ПРАВИЛА СОЗДАНИЯ<br>ЗАКАЗА НА САЙТЕ</p>
    <div class="row no-gutter">
        <div class="col-f-md-3 col-f-xs-3 rules-order__item">

            <div class="rules-order__wrap-img">
                <img src="~/Content/img/mouse.png" alt="" class="rules-order__img">
            </div>


            <p class="rules-order__item-title">
                Выберите на сайте то,
                что вам интересно
            </p>
        </div>
        <div class="col-f-md-3 col-f-xs-3 rules-order__item">

            <div class="rules-order__wrap-img">
                <img src="~/Content/img/shopping-basket.png" alt="Добавьте товары в свою корзину"
                     class="rules-order__img">
            </div>
            <p class="rules-order__item-title">
                Добавьте товары
                в свою корзину
            </p>
        </div>
        <div class="col-f-md-3 col-f-xs-3 rules-order__item">
            <div class="rules-order__wrap-img">
                <img src="~/Content/img/placeholder.png" alt="" class="rules-order__img">
            </div>
            <p class="rules-order__item-title">
                Укажите место
                доставки
            </p>
        </div>
        <div class="col-f-md-3 col-f-xs-3 rules-order__item">
            <div class="rules-order__wrap-img">
                <img src="~/Content/img/telephone.png" alt="" class="rules-order__img">
            </div>
            <p class="rules-order__item-title">
                Дождитесь звонка
                нашего курьера
            </p>
        </div>
        <div class="col-f-md-3 col-f-xs-3 rules-order__item">
            <div class="rules-order__wrap-img">
                <img src="~/Content/img/trolley.png" alt="" class="rules-order__img">
            </div>
            <p class="rules-order__item-title">
                Товар доставят вам
                в течении 48 часов
            </p>
        </div>
    </div>
</div>

@Scripts.Render("~/bundles/magnificPopup")
@Scripts.Render("~/bundles/magnificPopup-manage")