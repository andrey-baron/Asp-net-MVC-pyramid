@model Pyramid.Entity.Event
@{
    ViewBag.Title = Model.Title;
    Layout = "~/Views/Shared/_Layout.cshtml";
    var modelFriendlyUrlBase = (FriendlyUrlBaseModel)ViewBag.FriendlyUrlBase;
}
<div class="page">
    <div class="page__title">@Model.Title</div>
    <div class="row no-gutter">
        <div class="col-f-lg-3 col-md-3 col-xs-3">
            <div style="text-align:center;">
                <button type="button" data-toggle="modal" data-target="#feedback-modal" class="btn btn-primary btn-green" style="margin-bottom:10px;">Обратная связь</button>
            </div>
            @Html.Partial("_PartialSliderOnPages")
        </div>

        <div class="col-f-lg-12 col-md-9 col-xs-9">
            <div class="row no-gutter">
                <div class="col-lg-12 col-xs-12">
                    <div class="page__event-banner">
                        <img class="page__event-banner-img" src="@(Model.Image!=null&&Model.Image.ServerPathImg!=null?Model.Image.ServerPathImg:"")" alt="" />
                    </div>
                </div>
                <div class="col-lg-12 col-md-12 col-xs-12">
                    <div class="page__content-wrap">
                        <div class="page__event-period">
                            Сроки проведения: @Model.DateEventStart.ToString("d") - @Model.DateEventEnd.ToString("d")
                        </div>
                        <div class="page__content">@MvcHtmlString.Create( Model.Content)</div>

                </div>
            </div>
            @foreach (var item in Model.Products)
                {
                <div class="col-lg-3 col-md-4 col-xs-4">
                    <div class="product__item">
                        <a href="@(!string.IsNullOrEmpty(item.FriendlyUrl)? item.FriendlyUrl : Url.Action("Index","Product",new { id=item.Id}))">
                            <img src="@(item.ThumbnailImg.ServerPathImg!=null?item.ThumbnailImg.ServerPathImg:Pyramid.Global.Config.PathNotFilledImage)" alt="" class="product__item-img">

                            <p class="product__item-title">@item.Title</p>
                            <div class="product__item-price @Pyramid.Tools.ProductTool.GetClassByTypePrice((int)item.TypePrice)">
                                <div class="triangle-up"></div>
                                <div class="triangle-down"></div>
                                <p class="product__item-price-inner"><span class="big-decimal">@item.Price</span> руб.</p>
                            </div>
                        </a>
                        <div class="product__item__hover_block_wrapper">
                            <div class="product__item__hover_block_wrapper__item product__in-stock @(item.TypeStatusProduct == Common.TypeStatusProduct.WillBeAdded?"product__in-stock_willbeadded":"")">
                                @if (item.TypeStatusProduct == Common.TypeStatusProduct.Normal)
                                {
                                    <p>в наличии</p>
                                }
                                @if (item.TypeStatusProduct == Common.TypeStatusProduct.WillBeAdded)
                                {
                                    <p>Доступен для заказа</p>
                                }
                            </div>
                            <a class="product__item__hover_block_wrapper__item" href="@Url.Action("CheckoutOneClick","Cart",new { id=item.Id})">
                                <div class="product__buy product__buy_one-click">
                                    <p>Купить в один клик</p>
                                </div>
                            </a>
                            <span class="product__item__hover_block_wrapper__item js-add-to-cart" data-ajaxid="@item.Id">
                                <span class="product__buy product__buy_add-to-cart">
                                    Добавить в корзину
                                </span>
                            </span>
                        </div>
                    </div>
                </div>

                }
            <div class="col-lg-12 col-md-12 col-xs-12">

                <a href="@(!string.IsNullOrEmpty(modelFriendlyUrlBase.EventBaseFriendlyUrl)? modelFriendlyUrlBase.EventBaseFriendlyUrl : Url.Action("Index","Event"))" class="page__link-event">Все акции</a>


            </div>
        </div>
    </div>

</div>
</div>

<div class="modal fade" id="feedback-modal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h4 class="modal-title" id="myModalLabel">Обратная связь</h4>
            </div>
            @{var feedback = new Common.FeedBack(); }
            <div class="modal-body">
                <form action="#" class="feedback-form-modal">

                    <div class="form-group call-to-action__form-group">
                        @Html.TextBoxFor(m => feedback.Name, new { @class = "form-control call-to-action__form-control", placeholder = Html.DisplayNameFor(d => feedback.Name) })
                        @Html.ValidationMessageFor(m => feedback.Name)

                    </div>
                    <div class="form-group call-to-action__form-group">
                        @Html.TextBoxFor(m => feedback.Email, new { @class = "form-control call-to-action__form-control", placeholder = Html.DisplayNameFor(d => feedback.Email) })
                        @Html.ValidationMessageFor(m => feedback.Email)
                        @*<input type="text" class="form-control call-to-action__form-control" placeholder="E-mail">*@
                    </div>
                    <div class="form-group call-to-action__form-group">
                        @Html.TextBoxFor(m => feedback.Phone, new { @class = "form-control call-to-action__form-control", placeholder = Html.DisplayNameFor(d => feedback.Phone) })
                        @Html.ValidationMessageFor(m => feedback.Phone)
                        @*<input type="text" class="form-control call-to-action__form-control" placeholder="Телефон">*@
                    </div>
                    <div class="form-group call-to-action__form-group">
                        <input class="" id="Confirm_terms" name="Confirm_terms" placeholder="Имя" type="checkbox">
                        <span class="personal-data-comment">Отправляя данную форму, я даю <a href="~/Content/Policy/pd_agreement_pyramid.pdf" target="_blank">согласие</a> на обработку моих персональных данных в соответствии с <a href="~/Content/Policy/pd_politics_pyramid.pdf" target="_blank">политикой обработки ПД</a>.</span>

                    </div>
                    <div class="form-group">
                        <div class="error-scope" style="color:red;"></div>
                    </div>
                    <button class="call-to-action__btn">Отправить запрос</button>
                </form>


            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Отмена</button>
            </div>
        </div>
    </div>
</div>

